import com.vanniktech.maven.publish.AndroidSingleVariantLibrary
import com.vanniktech.maven.publish.SonatypeHost

plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'

    alias libs.plugins.jacoco.android
    alias libs.plugins.maven.publish.base
    alias libs.plugins.compose.compiler
}

if (project.hasProperty("coverage")) {
    apply plugin: 'jacoco'
}

mavenPublishing {
    pomFromGradleProperties()
    publishToMavenCentral(SonatypeHost.S01)
    signAllPublications()

    def publishJavaDoc = false // https://github.com/Kotlin/dokka/issues/2956
    def publishSources = true
    configure(new AndroidSingleVariantLibrary("release", publishSources, publishJavaDoc))
}

android {
    namespace 'io.element.android.wysiwyg.compose'
    testNamespace 'io.element.android.wysiwyg.compose.test'

    compileSdk 34

    defaultConfig {
        minSdk 23

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    testCoverage {
        jacocoVersion = "0.8.8"
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.15'
    }
    packagingOptions {
        resources.excludes += 'META-INF/LICENSE.md'
        resources.excludes += 'META-INF/LICENSE-notice.md'
    }
}

kotlin {
    jvmToolchain(11)
}

dependencies {
    implementation project(":library")

    implementation libs.timber

    implementation libs.androidx.core
    implementation platform('org.jetbrains.kotlin:kotlin-bom:2.0.20')
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'
    debugImplementation "androidx.compose.ui:ui-tooling"

    testImplementation libs.test.junit
    testImplementation libs.test.mockk
    testImplementation libs.test.kotlin.coroutines
    testImplementation libs.test.turbine
    testImplementation libs.molecule.runtime
    androidTestImplementation project(":test")
    androidTestImplementation libs.test.androidx.junit
    androidTestImplementation libs.test.androidx.espresso
    androidTestImplementation libs.test.mockk.android
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
    debugImplementation("androidx.compose.ui:ui-test-manifest")

}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}

mavenPublishing {
    coordinates(property("MAVEN_GROUP"), property("POM_ARTIFACT_ID"), property("MAVEN_VERSION_NAME"))
    if (!providers.gradleProperty("mavenCentralUsername")) {
        println("No maven central provider")
    }
    pom {
        name = "Matrix Rich Text Editor - Compose"
        description.set("Cross-platform rich text editor that generates HTML output.")
        inceptionYear.set("2022")
        url.set("https://github.com/element-hq/matrix-rich-text-editor")
        licenses {
            license {
                name.set("GNU Affero General Public License (AGPL) version 3.0")
                url.set("https://www.gnu.org/licenses/agpl-3.0.txt")
                distribution.set("https://www.gnu.org/licenses/agpl-3.0.txt")
            }
            license {
                name.set("Element Commercial License")
                url.set("https://raw.githubusercontent.com/element-hq/matrix-rich-text-editor/refs/heads/main/LICENSE-COMMERCIAL")
                distribution.set("https://raw.githubusercontent.com/element-hq/matrix-rich-text-editor/refs/heads/main/LICENSE-COMMERCIAL")
            }
        }
        developers {
            developer {
                id.set("matrixdev")
                name.set("matrixdev")
                url.set("https://github.com/element-hq/")
                email.set("android@element.io")
            }
        }
        scm {
            url.set("https://github.com/element-hq/matrix-rich-text-editor/")
            connection.set("scm:git:git://github.com/element-hq/matrix-rich-text-editor.git")
            developerConnection.set("scm:git:ssh://git@github.com/element-hq/matrix-rich-text-editor.git")
        }
    }
}
